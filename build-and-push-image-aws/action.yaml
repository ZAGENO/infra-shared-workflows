name: 'Build and Push Container Image'
description: 'Builds and pushes container image to Amazon ECR'

inputs:
  build_context:
    description: Build context of the dockerfile
    required: false
    default: .
  build_args:
    description: Build arguments
    required: false
  dockerfile_path:
    description: Path to the dockerfile
    required: false
    default: ./Dockerfile
  environment:
    description: Environment name
    required: false
  aws_region:
    description: AWS region for ECR
    required: true
    default: us-east-1
  ecr_repository:
    description: ECR repository name
    required: true
  image_tag:
    description: Image tag
    required: false
  image_name:
    description: Image name
    required: true
  tags:
    description: Tags for the image
    required: true
  aws_access_key_id:
    description: AWS access key ID
    required: true
  aws_secret_access_key:
    description: AWS secret access key
    required: true

runs:
  using: "composite"

  steps:
    - 
      name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}

    -
      name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - 
      name: Get branch name
      if: ${{ !inputs.image_tag && !inputs.environment }}
      run: |
        if [ -n "${GITHUB_HEAD_REF}" ]; then
          echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
        else
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        fi
      shell: bash

    - 
      name: Get 8 digit SHA
      shell: bash
      id: sha8
      run: echo "sha8=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
    
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: linux/amd64

    - 
      name: Set up Docker Context
      shell: bash
      run: docker context create builders

    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        endpoint: builders
        cache-binary: false

    -
      name: Build and push
      if: ${{ !inputs.image_tag && inputs.environment }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.build_context }}
        file: ${{ inputs.dockerfile_path }}
        platforms: linux/amd64
        provenance: false
        push: true
        build-args: |
          ${{ inputs.build_args }}
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_name }}:${{ inputs.environment }}.${{ steps.sha8.outputs.sha8 }}-${{ github.run_number }}
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_name }}:latest
        labels: |
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=github.com/${{ github.repository }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    -
      name: Build and push
      if: ${{ inputs.image_tag }} 
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.build_context }}
        file: ${{ inputs.dockerfile_path }}
        platforms: linux/amd64
        provenance: false
        push: true
        build-args: |
          ${{ inputs.build_args }}
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
        labels: |
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=github.com/${{ github.repository }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    -
      name: Build and push
      if: ${{ !inputs.image_tag && !inputs.environment }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.build_context }}
        file: ${{ inputs.dockerfile_path }}
        platforms: linux/amd64
        provenance: false
        push: true
        build-args: |
          ${{ inputs.build_args }}
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_name }}:${{ env.BRANCH_NAME }}.${{ steps.sha8.outputs.sha8 }}-${{ github.run_number }}
        labels: |
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=github.com/${{ github.repository }}
        cache-from: type=gha
        cache-to: type=gha,mode=max