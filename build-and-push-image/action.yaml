name: 'Build and Push Container Image'
description: 'Builds and pushes container image to google artifact registry'

inputs:
  build_context:
    description: Build context of the dockerfile
    required: false
    default: .
  build_args:
    description: Build arguments
    required: false
  dockerfile_path:
    description: Path to the dockerfile
    required: false
    default: ./Dockerfile
  environment:
    description: Environment name
    required: false
  gar_host:
    description: GCP artifactory registry host name
    required: true
  gar_project:
    description: GCP artifactory registry project name
    required: true
  gar_repository:
    description: GCP artifactory registry repository name
    required: true
  image_tag:
    description: Image tag
    required: false
  image_name:
    description: Image name
    required: true
  gcp_workload_identity_provider:
    description: GCP workload indentity provider
    required: true
  gcp_service_account:
    description: GCP service account name
    required: true
  registry_url:
    description: GCP registry url
    required: true
  tags:
    description: Tags for the image
    required: true

runs:
  using: "composite"

  steps:
    - 
      name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v3'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ inputs.gcp_workload_identity_provider }}
        service_account: ${{ inputs.gcp_service_account }}

    -
      name: Login to GCR
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.gar_host }}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - 
      name: Get branch name
      if: ${{ !inputs.image_tag && !inputs.environment }}
      run: |
        if [ -n "${GITHUB_HEAD_REF}" ]; then
          echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
        else
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        fi
      shell: bash

    - 
      name: Get 8 digit SHA
      shell: bash
      id: sha8
      run: echo "sha8=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
    
    # -
    #   name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3
    #   with:
    #     platforms: linux/amd64

    # - 
    #   name: Set up Docker Context
    #   shell: bash
    #   run: docker context create builders

    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        install: true
        cache-binary: false

    -
      name: Build and push
      if: ${{ !inputs.image_tag && inputs.environment }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.build_context }}
        file: ${{ inputs.dockerfile_path }}
        platforms: linux/amd64
        provenance: false
        push: true
        build-args: |
          ${{ inputs.build_args }}
        tags: |
          ${{ inputs.gar_host }}/${{ inputs.gar_project }}/${{ inputs.gar_repository }}/${{ inputs.image_name }}:${{ inputs.environment }}.${{ steps.sha8.outputs.sha8 }}-${{ github.run_number }}
          ${{ inputs.gar_host }}/${{ inputs.gar_project }}/${{ inputs.gar_repository }}/${{ inputs.image_name }}:latest
        labels: |
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=github.com/${{ github.repository }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    -
      name: Build and push
      if: ${{ inputs.image_tag }} 
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.build_context }}
        file: ${{ inputs.dockerfile_path }}
        platforms: linux/amd64
        provenance: false
        push: true
        build-args: |
          ${{ inputs.build_args }}
        tags: |
          ${{ inputs.gar_host }}/${{ inputs.gar_project }}/${{ inputs.gar_repository }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
        labels: |
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=github.com/${{ github.repository }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    -
      name: Build and push
      if: ${{ !inputs.image_tag && !inputs.environment }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.build_context }}
        file: ${{ inputs.dockerfile_path }}
        platforms: linux/amd64
        provenance: false
        push: true
        build-args: |
          ${{ inputs.build_args }}
        tags: |
          ${{ inputs.gar_host }}/${{ inputs.gar_project }}/${{ inputs.gar_repository }}/${{ inputs.image_name }}:${{ env.BRANCH_NAME }}.${{ steps.sha8.outputs.sha8 }}-${{ github.run_number }}
        labels: |
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=github.com/${{ github.repository }}
        # cache-from: type=gha
        # cache-to: type=gha,mode=max
        cache-from: type=registry,ref=${{ inputs.gar_host }}/${{ inputs.gar_project }}/${{ inputs.gar_repository }}:buildcache
        cache-to: type=registry,ref=${{ inputs.gar_host }}/${{ inputs.gar_project }}/${{ inputs.gar_repository }}:buildcache